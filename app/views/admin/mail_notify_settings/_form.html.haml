-if flash[:error]
  .alert-message.error= flash[:error].html_safe

= form_for ([:admin, @project, @mail_notify_setting]), :remote => true do |f|
  -if @mail_notify_setting.errors.any?
    #error_explanation
      %h2= "#{pluralize(@mail_notify_setting.errors.count, "error")} prohibited this mail_notify_setting from being saved:"
      %ul
        - @mail_notify_setting.errors.full_messages.each do |msg|
          %li= msg
  %fieldset
    %legend= title
    .clearfix
      =f.label :mail
      .required *
      .input
        =f.text_field :mail, :class => "validate[required, custom[email]]"
    .clearfix
      =f.label :mail_notify_group
      .required *
      .input
        .row
          .columns.span7
            %select.as-select#mnsgs{:multiple => 'multiple'}
              - (MailNotifyGroup.all - @mail_notify_setting.mail_notify_groups).each do |group|
                %option{:value => group.id}= group.name
            %a#add-all-mnsg-button{:title => 'Add All Mail Notify Groups', :href => '#'}
              %span.multi-select-item-add.ui-icon
              Choose All
          .columns.span1#drag-arrow
            %a.multi-select-item-add.ui-icon#add-mnsg-button
            .clearfix
            %a.multi-select-item-remove.ui-icon#remove-mnsg-button
          .columns.span7
            %select.as-select#mnsgs-selected{:multiple => 'multiple', :class => "validate[funcCall[checkNullSelectBox]]"}
              - @mail_notify_setting.mail_notify_groups.each do |group|
                %option{:value => group.id}= group.name
            %a#clear-all-mnsg-button
              %span.multi-select-item-remove.ui-icon
              Clear All
            = hidden_field_tag "mail_notify_setting[mail_notify_group_ids][]", ""
          #mnsg-ids
    .clearfix
      =f.label :test_type
      .required *
      .input
        .row
          .columns.span7
            %select.as-select#testtypes{:multiple => 'multiple'}
              - (TestType.all - @mail_notify_setting.test_types).each do |type|
                %option{:value => type.id}= type.name
            %a#add-all-testtype-button{:title => 'Add All Test Types', :href => '#'}
              %span.multi-select-item-add.ui-icon
              Choose All
          .columns.span1#drag-arrow
            %a.multi-select-item-add.ui-icon#add-testtype-button
            .clearfix
            %a.multi-select-item-remove.ui-icon#remove-testtype-button
          .columns.span7
            %select.as-select#testtypes-selected{:multiple => 'multiple', :class => "validate[funcCall[checkNullSelectBox]]"}
              - @mail_notify_setting.test_types.each do |type|
                %option{:value => type.id}= type.name
            %a#clear-all-testtype-button
              %span.multi-select-item-remove.ui-icon
              Clear All
            = hidden_field_tag "mail_notify_setting[test_type_ids][]", ""
          #testtype-ids
    .actions
      = f.submit 'Save', :class => 'btn primary', :id => 'save'
      = link_to 'Back', admin_project_mail_notify_settings_path(@project), :class => 'btn'

:javascript
  $(function(){
    $("#new_mail_notify_setting").validationEngine({promptPosition : "bottomRight", scroll: false});
    $(".edit_mail_notify_setting").validationEngine({promptPosition : "bottomRight", scroll: false});
    $('#mnsgs-selected').children().each(function(idx, elem){
      $('#mnsg-ids').append($('#mail_notify_setting_mail_notify_group_ids_').clone().val($(elem).attr('value')));
    });
    $('#testtypes-selected').children().each(function(idx, elem){
      $('#testtype-ids').append($('#mail_notify_setting_test_type_ids_').clone().val($(elem).attr('value')));
    });
    $('#add-mnsg-button').click(function(){
      $('#mnsg-ids').empty();
      $('#mnsgs :selected').each(function(idx, elem){
        $('#mnsgs-selected').append($(elem));
      });
      $('#mnsgs-selected').children().each(function(idx, elem){
        $('#mnsg-ids').append($('#mail_notify_setting_mail_notify_group_ids_').clone().val($(elem).attr('value')));
      });
    });
    $('#remove-mnsg-button').click(function(){
      $('#mnsg-ids').empty();
      $('#mnsgs-selected :selected').each(function(idx, elem){
        $('#mnsgs').append($(elem));
      });
      $('#mnsgs-selected').children().each(function(idx, elem){
        $('#mnsg-ids').append($('#mail_notify_setting_mail_notify_group_ids_').clone().val($(elem).attr('value')));
      });
    });
    $('#add-all-mnsg-button').click(function(){
      $('#mnsgs option').each(function(idx, elem){
        $('#mnsgs-selected').append($(elem));
        $('#mnsg-ids').append($('#mail_notify_setting_mail_notify_group_ids_').clone().val($(elem).attr('value')));
      });
    });
    $('#clear-all-mnsg-button').click(function(){
      $('#mnsg-ids').empty();
      $('#mnsgs-selected option').each(function(idx, elem){
        $('#mnsgs').append($(elem));
      });
    });

    $('#add-testtype-button').click(function(){
      $('#testtype-ids').empty();
      $('#testtypes :selected').each(function(idx, elem){
        $('#testtypes-selected').append($(elem));
      });
      $('#testtypes-selected').children().each(function(idx, elem){
        $('#testtype-ids').append($('#mail_notify_setting_test_type_ids_').clone().val($(elem).attr('value')));
      });
    });
    $('#remove-testtype-button').click(function(){
      $('#testtype-ids').empty();
      $('#testtypes-selected :selected').each(function(idx, elem){
        $('#testtypes').append($(elem));
      });
      $('#testtypes-selected').children().each(function(idx, elem){
        $('#testtype-ids').append($('#mail_notify_setting_test_type_ids_').clone().val($(elem).attr('value')));
      });
    });
    $('#add-all-testtype-button').click(function(){
      $('#testtypes option').each(function(idx, elem){
        $('#testtypes-selected').append($(elem));
        $('#testtype-ids').append($('#mail_notify_setting_test_type_ids_').clone().val($(elem).attr('value')));
      });
    });
    $('#clear-all-testtype-button').click(function(){
      $('#testtype-ids').empty();
      $('#testtypes-selected option').each(function(idx, elem){
        $('#testtypes').append($(elem));
      });
    });
    $(".new_mail_notify_setting,.edit_mail_notify_setting").bind('ajax:complete',
      function(data, status, xhr) {
        if (JSON.parse(status.responseText).result == "success") {
          location.href = $(".new_mail_notify_setting,.edit_mail_notify_setting").attr("action").match(/\/admin\/projects\/\d\/mail_notify_settings/g)[0];
        } else if (JSON.parse(status.responseText).result == "failed") {
          alert("A same record in your settings already exists in the database. Please modify your settings.");
        } else {
          alert("Something wrong in server, please try again later.");
        }
      }
    );
  });