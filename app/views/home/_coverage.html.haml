/= "#{@project_coverages.to_json}"
#market_coverage_chart

:javascript
  $(function() {
    var project_coverages = jQuery.parseJSON('#{@project_coverages.to_json}');
    var data_series = [];
    var project_names = [];
    var colors = ['#3A8FC3', '#7BA13B', '#CBA744', '#B7592B', '#59ACBD'];
    for (var i = 0; i < project_coverages.length; i++) {
      project_names[i] = project_coverages[i]['name'];
      data_series[i] = {
        color: colors[(i % 5)],
        y: parseFloat(project_coverages[i]['overall_coverage']),
        url: project_coverages[i]['link'],
        automated: parseInt(project_coverages[i]['automated']),
        update_needed: parseInt(project_coverages[i]['update_needed']),
        not_candidate: parseInt(project_coverages[i]['not_candidate']),
        update_manual: parseInt(project_coverages[i]['update_manual']),
        not_ready: parseInt(project_coverages[i]['not_ready']),
        automatable: parseInt(project_coverages[i]['automatable']),
        total: parseInt(project_coverages[i]['total'])
      };
    }
    
    $('#market_coverage_chart').highcharts({
      chart: {
        type: 'column'
      },
      title: {
        text: 'Projects Automation Coverage',
        style: {
          fontSize: '20px',
          fontFamily: 'Verdana, sans-serif'
        },
      },
      xAxis: {
        type: 'category',
        categories: project_names,
        labels: {
          align: 'center',
          y: 20,
          style: {
            fontSize: '13px',
            fontFamily: 'Verdana, sans-serif'
          },
        }
      },
      yAxis: {
        min: 0,
        max: 100,
        title: {
          text: 'Overall Coverage'
        }
      },
      series: [{
        name: 'Overall Coverage',
        data: data_series,
        dataLabels: {
          offset: '120',
          enabled: true,
          color: '#000000',
          align: 'center',
          format: '{y} %',
          style: {
            fontSize: '13px',
            fontFamily: 'Verdana, sans-serif',
            textShadow: '0 0 3px black'
          }
        }
      }],
      legend: {
        enabled: false
      },
      tooltip: {
        useHTML: true,
        formatter: function() {
          return '<table><tr><td>Automated</td><td>' + this.point.automated + '</td></tr><tr><td>Automatable</td><td>' + this.point.automatable + '</td></tr><tr><td>Update Needed</td><td>' + this.point.update_needed + '</td></tr><tr><td>Not Ready</td><td>' + this.point.not_ready + '</td></tr><tr><td>Not Candidate</td><td>' + this.point.not_candidate + '</td></tr><tr><td>Update Manual</td><td>' + this.point.update_manual + '</td></tr><tr><td>Total Cases</td><td>' + this.point.total + '</td></tr>';
        }
      },
      plotOptions: {
        series: {
          cursor: 'pointer',
          point: {
            events: {
              click: function() {
                location.href = this.options.url;
              }
            }
          }
        }
      }      
    });   
  });
  